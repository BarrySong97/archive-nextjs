---
description: when create a new component or page those rules you should folllow
globs: 
alwaysApply: true
---

# common
1. 使用tailwind生成样式
2. 如果有动画需求先考虑css原生动画，如果无法满足请使用framer-motion
3. icon使用@iconify/react
4. UI优先考虑使用nextui，但是nextui改名叫heroui了，所以当我说nextui或者heroui的时候，你就按照原本nextui的方式来写，只不过导入的时候需要把原来的nextui改成heroui.


## 颜色方案

背景颜色：白色背景
文字颜色：使用偏黑色表达正常文字，偏灰色表达次要文字
具体颜色 参考 [colors.ts](mdc:components/theme/colors.ts)

## 字体

字体类型：选择无衬线字体（如Helvetica、Roboto等）以保持现代感与简洁性。
字体大小：重要数据（如数字、百分比）使用较大字体，确保易读性。
字体重量：数字和统计信息使用加粗或大号字体，其他辅助信息使用常规或细字体。

## 布局结构

整体风格：遵循简洁和整齐的“卡片”式布局，避免信息的堆砌。
间距：适当使用空白区域来分隔内容块，避免视觉拥挤。
对齐：保持元素的水平或垂直对齐，以创建整洁的布局。
分组：将相关信息进行分组，例如将锻炼的详细列表与进度信息分开显示。
数字和数据展示

关键数据突出：使用较大的字体显示关键数字（例如，卡路里、运动时间等），以确保用户一眼看到最重要的数据。
数据单位：数据旁边应加上适当的单位（如卡路里、分钟等），使其更具可理解性。
进度条：使用进度条、图标、或百分比表示进度，视觉上简单而直接。
交互设计

按钮和链接：按钮和链接使用简洁的边框或下划线样式，保持一致的设计语言。
图标：选择简洁、直观的图标，不宜过于复杂，确保与文本内容一致，增强用户理解。
动画：在用户交互时使用流畅的过渡动画，避免过多的动态效果，保证用户专注于内容本身。
信息层级

主要信息：例如主要数据、图表和进度，应该位于页面的显眼位置，确保用户可以轻松获取。
辅助信息：例如描述性文本或额外的统计数据可以以较小字体显示，确保不抢占主要内容的注意力。

## 可访问性

对比度：确保文本和背景之间有足够的对比度，使得即使在光线较差的环境中也能清楚阅读。
可调字体：考虑为用户提供调整字体大小的选项，以适应不同视力需求。
响应式设计：确保设计能够适应不同尺寸的屏幕（如手机、平板、电脑）。


